name: Publish
on:
  push:
    branches:
    - main
  workflow_dispatch:
jobs:
  publish:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Initialize deployment
      id: deployment
      uses: actions/github-script@v4.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const tag = "latest";
          const deployment = await github.repos.createDeployment({
            environment: tag,
            ref: "${{ github.sha }}",
            owner: context.repo.owner,
            repo: context.repo.repo,
            required_contexts: []
          });
          core.setOutput("id", deployment.data.id);
          core.setOutput("tag", 'latest');

    - name: Parameters
      run: |
        echo Branch ${{ github.ref }}
        echo Deployment ${{ steps.deployment.outputs.id }}
        echo Tag ${{ steps.deployment.outputs.tag }}

    - name: Docker
      working-directory: ./docker
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
        docker build . --tag ghcr.io/${{ secrets.DOCKER_IMAGE }}:${{ steps.deployment.outputs.tag }}
        docker push ghcr.io/${{ secrets.DOCKER_IMAGE }}:${{ steps.deployment.outputs.tag }}

    - name: On success
      if: success()
      uses: actions/github-script@v4.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: '${{ steps.deployment.outputs.id }}',
            state: 'success'
          });

    - name: On error
      if: failure() || cancelled()
      uses: actions/github-script@v4.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: '${{ steps.deployment.outputs.id }}',
            state: 'failure'
          });
